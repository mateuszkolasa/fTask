{# app/Resources/views/layout.html.twig #}
{% extends "SymfonyFirstApp::layout.html.twig" %}

{% block title %}fTask{% endblock %}

{% block content %}
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.min.js"></script>
<script type="text/javascript">
(function(){
    var fTask = angular.module('fTask', []).config(['$interpolateProvider', function ($interpolateProvider) {
        $interpolateProvider.startSymbol('[[');
        $interpolateProvider.endSymbol(']]');
    }]);

    fTask.factory('$task', ['$http', function($http) {
		var taskService = this;  
		this.temp;  
		this.tasks = [];

        $http.get('/api/tasks').success(function(data){
            taskService.tasks = data;
        });

    	return {
        	changeStatus: function(task) {
				var address = '{{ path('SymfonyFirstApp_status', {id: '__ID__'}) }}';
            	$http.post(address.replace('__ID__', task.id)).success(function(data){
                	if(data.status) {
						task.priority = data.priority;
                		task.status = true;
                	} else {
						task.priority = data.priority;
                		task.status = false;
                    }
                });
            },
            getTasks: function() {
             	return taskService.tasks;   
            },
            addTask: function(task, ctrl) {
                taskService.temp = false;
                $http.post('/api/add/task', task).success(function(resp) {
                    if(resp.error != undefined) {
                        alert(resp.error);
                        return false;
                    }

                    task = resp.newTask;
                    taskService.tasks.push(task);
                    ctrl.newTask = {};
                }).error(function(resp){
                    alert('Wystąpił błąd');
                });
            }
        };
    }]);
    
    fTask.controller('GridController', ['$task', function($task) {
        var grid = this;

        this.filterHideFinished = true;

        this.hideFinished = function(status) {
            grid.filterHideFinished = status;
        };

        this.statusChange = function(task) {
            $task.changeStatus(task);
        }

        this.getTasks = function() {
            return $task.getTasks();
        };
    }]);

    fTask.controller('TaskController', ['$scope', '$task', function($scope, $task) {
        var to = this;
        this.newTask = {};
        
        this.add = function() {
            to.newTask.status = true;
            to.newTask.category = $scope.category['name'];
            $task.addTask(to.newTask, to);
        };
    }]);


    fTask.directive('sel', ['$http', function($http) {
        var sel = this;
        this.categories = [];

        $http.get('/api/categories').success(function(data){
            for(var x = 0; x < data.length; x++) {
                sel.categories.push({name: data[x].name, value: data[x].name});
            }
        });
       
        return {
          	template: '<select ng-model="selectedValue" ng-options="c.name for c in categories"></select>',
          	restrict: 'E',
          	scope: {
             	selectedValue: '='
          	},
          	link: function(scope, elem, attrs) {
	          	scope.categories = sel.categories;
    			scope.selectedValue=scope.categories[1];
          	}
        };
    }]);
})();
</script>
<h1>Lista zadań</h1>
<div ng-controller="GridController as grid">
    <a href="#filtr" ng-click="grid.hideFinished(true)" ng-hide="grid.filterHideFinished"><span class="glyphicon glyphicon-check" style="cursor: pointer;"></span> Pokaż zakończone</a>
    <a href="#filtr" ng-click="grid.hideFinished(false)" ng-show="grid.filterHideFinished"><span class="glyphicon glyphicon-unchecked" style="cursor: pointer;"></span> Pokaż zakończone</a>

    <div class="tasks">
        <div ng-repeat="task in grid.getTasks()" ng-hide="!task.status && grid.filterHideFinished">
            <div class="task label" ng-class="'label-' + task.priority">
				<!--<form action="{ path('SymfonyFirstApp_delete', {id: task.id}) }}" method="post" class="formOneButton">-->
        			<!--<button type="submit" class="btn btn-xs btn-link">Usuń</button>-->
				<!--</form>-->
                
                <span class="glyphicon glyphicon-check" ng-hide="task.status" ng-click="grid.statusChange(task)" style="cursor: pointer;"></span>
                <span class="glyphicon glyphicon-unchecked" ng-show="task.status" ng-click="grid.statusChange(task)" style="cursor: pointer;"></span>
                
				<div ng-show="task.category" class="category label label-primary" ng-class="'label-' + task.category.className">
                    [[ task.category.name ]]
				</div>
                
                [[ task.title ]]
            </div>
        </div>
    </div>
</div>

<form name="createTask" ng-controller="TaskController as taskCtrl" ng-submit="taskCtrl.add()">
    <div class="tasks">
        <div class="task label" ng-class="'label-' + taskCtrl.newTask.priority" ng-show="taskCtrl.newTask.priority">
		    <span class="glyphicon glyphicon-unchecked"></span>
    
            <div ng-show="category" class="category label label-default">
                [[ category['name'] ]]
			</div>
        
            [[ taskCtrl.newTask.title ]]
        </div>
        
        <input type="text" ng-model="taskCtrl.newTask.title" required>
        <select ng-model="taskCtrl.newTask.priority" required>
            <option value="info" selected="selected">Niski</option>
            <option value="warning">Normalny</option>
            <option value="danger">Wysoki</option>
        </select>
        
        <sel selected-value="category">
        </sel>
        
        <button class="btn btn-primary">Dodaj</button>
    </div>
</form>
{% endblock %}
